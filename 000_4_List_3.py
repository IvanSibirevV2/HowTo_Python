import os
if os.path.abspath(os.curdir) == os.path.dirname(os.path.realpath(__file__)) :
	os.system("start notepad++ "+__file__)
	exit()
##########################################################
a = [0,1, 2, 3, 4, 5]
print("a = [0,1, 2, 3, 4, 5]",'\n','    ',a)
# добавляет  элемент в конец списка
a.append(6)
print("a.append(7)",'\n','    ',a)
#добавляет массив в конец списка
a.extend([7,8])
print("a.extend([7,8])",'\n','    ',a)
#втыкание перед заданным индексом одного значения
a.insert(2, 999)
print("a.extend([7,8])",'\n','    ',a)
#Воткнуть перед первым элементом массива
a.insert(0, 888)
print("a.insert(0, 888)",'\n','    ',a)
a = [0,1, 2, 3, 4, 5]
print("a = [0,1, 2, 3, 4, 5]",'\n','    ',a)
a.remove(2)
print("a.remove(2)",'\n','    ',a)
#Забрать с вершины значение как из стека
print("a.pop()=",a.pop(),'\n','    ',a)
#Забрать со второго элемента значение с удаления
print("a.pop(2)=",a.pop(2),'\n','    ',a)
a.clear()
print("a.clear()",'\n','    ',a)
a = ["str0","str1", "str2", "str3", "str4", "str5"]
print("a =[\"str0\",\"str1\", \"str2\", \"str3\", \"str4\", \"str5\"]",'\n','    ',a)
#Поиск индекса в массиве по объекту, индекс относительно исходного массива
#Вызывает ValueError, если такого элемента нет.
print("a.index(\"str1\")=",a.index("str1"))
#Поиск индекса в массиве по объекту в диапазоне
print("a.index(\"str1\", 0, 3)=",a.index("str1", 0, 3))
#Возвращает количество раз, когда x появляется в списке.
a = [0,1,2,3,4,5,4]
print("a = [0,1,2,3,4,5,4]",'\n','    ',a)
a.count(4)
print("a.count(4)=",a.count(4))

"""

list.sort(*, key=None, reverse=False)
Отсортируйте элементы списка на месте (аргументы можно использовать для настройки сортировки, их объяснение смотрите в разделе sorted()).

list.reverse()
Поменяйте местами элементы списка.

list.copy()
Возвращает неглубокую копию списка. Эквивалентно [:].

Пример, в котором используется большинство методов списка:
"""
##########################################################
test_text = input(" Для завершения программы нажмите Enter: ")