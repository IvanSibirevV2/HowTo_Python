import os
if os.path.abspath(os.curdir) == os.path.dirname(os.path.realpath(__file__)) :
	os.system("start notepad++ "+__file__)
	exit()
##########################################################
"""
https://docs.python.org/3/tutorial/index.html

_5. Data Structures

5. Структуры данных¶
В этой главе более подробно описаны некоторые вещи, о которых вы уже узнали, а также добавлены некоторые новые моменты.

5.1. Подробнее о списках¶
Тип данных list имеет еще несколько методов. Здесь приведены все методы объектов list:

list.append(x)
Добавьте элемент в конец списка. Эквивалентно a[len(a):] = [x].

list.extend(iterable)
Расширьте список, добавив все элементы из iterable. Эквивалентно a[len(a):] = iterable.

list.insert(i, x)
Вставить элемент в заданную позицию. Первый аргумент - это индекс элемента, перед которым нужно вставить, поэтому a.insert(0, x) вставляется в начало списка, а a.insert(len(a), x) эквивалентен a.append(x).

list.remove(x)
Удалите первый элемент из списка, значение которого равно x. Это вызывает ValueError, если такого элемента нет.

list.pop([i])
Удалите элемент в заданной позиции списка и верните его. Если индекс не указан, a.pop() удаляет и возвращает последний элемент в списке. (Квадратные скобки вокруг i в сигнатуре метода означают, что параметр необязателен, а не то, что вы должны вводить квадратные скобки в этой позиции. Вы часто увидите это обозначение в справочнике по библиотеке Python.)

list.clear()
Удалите все элементы из списка. Эквивалентно del a[:].

list.index(x[, start[, end]])
Возвращает нулевой индекс в списке первого элемента, значение которого равно x. Вызывает ValueError, если такого элемента нет.

Необязательные аргументы start и end интерпретируются как в нотации slice и используются для ограничения поиска определенной подпоследовательностью списка. Возвращаемый индекс вычисляется относительно начала полной последовательности, а не аргумента start.

list.count(x)
Возвращает количество раз, когда x появляется в списке.

list.sort(*, key=None, reverse=False)
Отсортируйте элементы списка на месте (аргументы можно использовать для настройки сортировки, их объяснение смотрите в разделе sorted()).

list.reverse()
Поменяйте местами элементы списка.

list.copy()
Возвращает неглубокую копию списка. Эквивалентно [:].

Пример, в котором используется большинство методов списка:
"""
##########################################################
test_text = input(" Для завершения программы нажмите Enter: ")